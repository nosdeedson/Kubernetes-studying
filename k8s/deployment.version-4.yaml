apiVersion: apps/v1
kind: Deployment
metadata:
  name: goserver
  labels:
    app: goserver
spec:
  replicas: 1 # using the value 10 will create 10 pods wich one wiht a container
  selector:
    matchLabels:
      app: goserver
  template:
    metadata:
      labels:
        app: "goserver"
    spec:
      containers:
        - name: goserver
          image: "wesleywillians/hello-go:v5.5"

          # readinessProbe and livenessProbe they work together
          # readinessProbe verifies if the application is ready to receive request
          # livenessProbe verifies if the application is running if not restart it
          # livenessProbe must have a initialDelaySeconds configuration 
          # that will give time for the readinessProbe to verify if the application is ready
          # if not they will put the application in infinite loop 
          # because before readinessProbe checks the readiness of the application 
          # the livenessProbe will check the heath and will see is not health and will restart the application
          # using the startProbe we avoid the situation mentioned because startupProbe will check the readiness of the application
          # after ready it will stop and let the readinessProbe and livenessProbe to manager the application

          startupProbe:
            httpGet:
              path: /healthz
              port: 8000
            periodSeconds: 4
            failureThreshold: 30

          readinessProbe:
            httpGet:
              path: /healthz
              port: 8000 # port of container
            periodSeconds: 5
            failureThreshold: 1
            timeoutSeconds: 1
            successThreshold: 1
            #initialDelaySeconds: 10

          livenessProbe:
            httpGet:
              path: /healthz
              port: 8000 # port of container
            periodSeconds: 5
            failureThreshold: 1
            timeoutSeconds: 1
            successThreshold: 1
            #initialDelaySeconds: 10


          envFrom:
          - configMapRef:
              name: goserver-env
          - secretRef:
              name: goserver-secret
          
          volumeMounts:
            - mountPath: "/go/myfamily"
              name: config
              readOnly: true
      
      volumes:
        - name: config
          configMap:
            name: configmap-family
            items:
            - key: members
              path: "family.txt"
          
          